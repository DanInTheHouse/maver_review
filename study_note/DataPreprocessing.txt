### Konlpy 라이브러리 장단점

| 라이브러리 | 장점 | 단점 |
| --- | --- | --- |
| Kkma | - 세부적인 형태소 분석 및 구문 분석 가능
- 빠른 속도와 보통의 분석 품질
- 자바가 설치된 환경이라면 어디서든 사용가능
- 자체 제작한 library들만 사용해 외부 library와의 의존성 문제가 없음
- 자소 단위 처리, TRIE 사전 등으로 약 50MB 메모리 상에서도 동작 가능
- 사전 관리 용이
- 타 형태소 분석기와 달리 공백이 포함된 형태소 단위로 분석 가능 | - 처리 속도가 다른 라이브러리에 비해 느릴 수 있음
- 분석시간이 Knlpy 중에서 가장 오래 걸린다.
- 정제된 언어가 사용되지 않는 문서에 대한 형태소 분석 정확도가 높지 않은 문제이 있다. |
| Okt | - 쉽게 사용 가능한 API 제공
-  다른 분석기들과 다르게 stem과 norm이라는 파라미터가 존재해서 단어들을 알아서 정규화해 주고 오타도 조금은 수정해 주는 기능이 있음 | - 정확도 면에서 다른 라이브러리보다 약간 낮을 수 있음 |
| Komoran | - 띄어쓰기 오류에 강건함 | - 속도가 빠르고 메모리 사용량이 적지만, 정확성 면에서 다른 라이브러리보다 떨어질 수 있음 |
| Hannanum | - 분석 결과의 가독성이 뛰어남 | - 처리 속도가 느리고, 분석 정확도 면에서 다른 라이브러리에 비해 떨어질 수 있음 |
| Mecab | - 일본어 처리에 강점이 있으며, 한국어에 대해서도 빠른 속도를 자랑 | - 사용자가 직접 사전을 구축해야 함. 다른 라이브러리에 비해 분석 결과의 가독성이 떨어질 수 있음
- Window에서 안돌아감 |

### 다양한 한국어 전처리 패키지

### **2-10 한국어 전처리 패키지(Text Preprocessing Tools for Korean Text)**

유용한 한국어 전처리 패키지를 정리해봅시다. 앞서 소개한 형태소와 문장 토크나이징 도구들인 KoNLPy와 KSS(Korean Sentence Splitter)와 함께 유용하게 사용할 수 있는 패키지들입니다.

### **1. PyKoSpacing(띄어쓰기)**

```bash
pip install git+https://github.com/haven-jeon/PyKoSpacing.git

```

전희원님이 개발한 PyKoSpacing은 띄어쓰기가 되어있지 않은 문장을 띄어쓰기를 한 문장으로 변환해주는 패키지입니다. PyKoSpacing은 대용량 코퍼스를 학습하여 만들어진 띄어쓰기 딥 러닝 모델로 준수한 성능을 가지고 있습니다.

```python
sent = '김철수는 극중 두 인격의 사나이 이광수 역을 맡았다. 철수는 한국 유일의 태권도 전승자를 가리는 결전의 날을 앞두고 10년간 함께 훈련한 사형인 유연재(김광수 분)를 찾으러 속세로 내려온 인물이다.'

```

임의의 문장을 임의로 띄어쓰기가 없는 문장으로 만들었습니다.

```python
new_sent = sent.replace(" ", '') # 띄어쓰기가 없는 문장 임의로 만들기
print(new_sent)

```

```python
김철수는극중두인격의사나이이광수역을맡았다.철수는한국유일의태권도전승자를가리는결전의날을앞두고10년간함께훈련한사형인유연재(김광수분)를찾으러속세로내려온인물이다.
```

이를 PyKoSpacing의 입력으로 사용하여 원 문장과 비교해봅시다.

```python
from pykospacingimport Spacing
spacing = Spacing()
kospacing_sent = spacing(new_sent)

print(sent)
print(kospacing_sent)
```

```python
김철수는 극중 두 인격의 사나이 이광수 역을 맡았다. 철수는 한국 유일의 태권도 전승자를 가리는 결전의 날을 앞두고 10년간 함께 훈련한 사형인 유연재(김광수 분)를 찾으러 속세로 내려온 인물이다.
김철수는 극중 두 인격의 사나이 이광수 역을 맡았다. 철수는 한국 유일의 태권도 전승자를 가리는 결전의 날을 앞두고 10년간 함께 훈련한 사형인 유연재(김광수 분)를 찾으러 속세로 내려온 인물이다.
```

정확하게 결과가 일치합니다.

### **2. Py-Hanspell(맞춤법 검사기)**

```python
pip install git+https://github.com/ssut/py-hanspell.git
```

Py-Hanspell은 네이버 한글 맞춤법 검사기를 바탕으로 만들어진 패키지입니다.

```python
from hanspellimport spell_checker

sent = "맞춤법 틀리면 외 않되? 쓰고싶은대로쓰면돼지 "
spelled_sent = spell_checker.check(sent)

hanspell_sent = spelled_sent.checked
print(hanspell_sent)
```

```python
맞춤법 틀리면 왜 안돼? 쓰고 싶은 대로 쓰면 되지
```

이 패키지는 띄어쓰기 또한 보정합니다. PyKoSpacing에 사용한 예제를 그대로 사용해봅시다.

```python
spelled_sent = spell_checker.check(new_sent)

hanspell_sent = spelled_sent.checked
print(hanspell_sent)
print(kospacing_sent) # 앞서 사용한 kospacing 패키지에서 얻은 결과
```

```python
김철수는 극 중 두 인격의 사나이 이광수 역을 맡았다. 철수는 한국 유일의 태권도 전승자를 가리는 결전의 날을 앞두고 10년간 함께 훈련한 사형인 유연제(김광수 분)를 찾으러 속세로 내려온 인물이다.
김철수는 극중 두 인격의 사나이 이광수 역을 맡았다. 철수는 한국 유일의 태권도 전승자를 가리는 결전의 날을 앞두고 10년간 함께 훈련한 사형인 유연재(김광수 분)를 찾으러 속세로 내려온 인물이다.
```

PyKoSpacing과 결과가 거의 비슷하지만 조금 다릅니다.

### **3. SOYNLP를 이용한 단어 토큰화(품사 태깅, 단어 토큰화)**